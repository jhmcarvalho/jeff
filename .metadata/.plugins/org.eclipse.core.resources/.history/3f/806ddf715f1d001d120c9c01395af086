package frases;

import java.awt.Color;
import java.awt.EventQueue;
import java.awt.GraphicsDevice;
import java.awt.GraphicsEnvironment;
import java.awt.Insets;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.util.HashMap;
import java.util.Map;
import java.util.Random;
import java.util.Scanner;

import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTextArea;

import java.awt.Font;

//import com.sun.awt.AWTUtilities;

public class ViewFrases {

	public JFrame frame;
	public JTextArea txtFrases;
	public JButton btnSair;
	public String line;
	public static String frase;

	/**
	 * Launch the application.
	 * 
	 * @throws FileNotFoundException
	 */

	public static void main(String[] args) throws FileNotFoundException {

//		EventQueue.invokeLater(new Runnable() {
//			public void run() {
//				try {
//					ViewFrases window = new ViewFrases();
//					window.frame.setVisible(true);
//				} catch (Exception e) {
//					e.printStackTrace();
//				}
//			}
//		});
//
//		Map<String, Integer> map = new HashMap<String, Integer>();
//		for (int i = 0; i < 1; ++i) {
//			String s = Frase(new File("D://Files.txt"));
//			if (!map.containsKey(s))
//				map.put(s, 0);
//			map.put(s, map.get(s) + 1);
//		}

	}

	public static String Frase(File f) throws FileNotFoundException {

		Random Rand = new Random();
		int n = 0;
		for (Scanner sc = new Scanner(f); sc.hasNext();) {
			++n;
			String line = sc.nextLine();
			if (Rand.nextInt(n) == 0)
				frase = line;

		}
		return frase;

	}

	Categoria cat = new Categoria();

	public ViewFrases() {
		// GraphicsEnvironment graphics =
		// GraphicsEnvironment.getLocalGraphicsEnvironment();
		// GraphicsDevice device = graphics.getDefaultScreenDevice();

		frame = new JFrame("Frase do dia");
		frame.getContentPane().setBackground(Color.WHITE);
		frame.setBounds(900, 100, 550, 240);
		frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		frame.getContentPane().setLayout(null);
		// frame.setExtendedState(JFrame.MAXIMIZED_BOTH);

		JLabel lbsuafrase = new JLabel("SUA FRASE DO DIA \u00C9:",
				JLabel.CENTER);
		lbsuafrase.setFont(new Font("Tempus Sans ITC", Font.PLAIN, 18));
		lbsuafrase.setBounds(142, 39, 225, 27);
		frame.getContentPane().add(lbsuafrase);
		txtFrases = new JTextArea();
		txtFrases.setLineWrap(true);
		txtFrases.setWrapStyleWord(true);
		txtFrases.setFont(new Font("Times New Roman", Font.PLAIN, 17));
		txtFrases.setMargin(new Insets(5, 5, 5, 5));
		txtFrases.setText(frase);
		// System.out.println(txtFrases.getText());

		txtFrases.setBounds(21, 77, 492, 57);
		frame.getContentPane().add(txtFrases);
		txtFrases.setColumns(10);
		txtFrases.setEditable(false);
		txtFrases.setBackground(Color.LIGHT_GRAY);
		// device.setFullScreenWindow(frame);

		JButton btnNovaFrase = new JButton("Nova Frase");
		btnNovaFrase.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent arg0) {

				EventQueue.invokeLater(new Runnable() {
					public void run() {
						try {
							ViewFrases window = new ViewFrases();
							window.frame.setVisible(true);
						} catch (Exception e) {
							e.printStackTrace();
						}
					}
				});

				Map<String, Integer> map = new HashMap<String, Integer>();
				for (int i = 0; i < 1; ++i) {
					String s = null;

					if (cat.isMotivacional()) {
						try {
							s = choose(new File("D://Motivacional.txt"));
						} catch (FileNotFoundException e) {
							// TODO Auto-generated catch block
							e.printStackTrace();
						}
						if (!map.containsKey(s))
							map.put(s, 0);
						map.put(s, map.get(s) + 1);
					
					}
					if (cat.isFeliz()){
						try {
							s = choose(new File("D://Feliz.txt"));
						} catch (FileNotFoundException e) {
							// TODO Auto-generated catch block
							e.printStackTrace();
						}
						if (!map.containsKey(s))
							map.put(s, 0);
						map.put(s, map.get(s) + 1);
					
					}
					if(cat.isTriste()){
						try {
							s = choose(new File("D://Triste.txt"));
						} catch (FileNotFoundException e) {
							// TODO Auto-generated catch block
							e.printStackTrace();
						}
						if (!map.containsKey(s))
							map.put(s, 0);
						map.put(s, map.get(s) + 1);
					
					}
				}

				// System.out.println(map);
			}

			public String choose(File f) throws FileNotFoundException {
				// String frase = null;
				Random Rand = new Random();
				int n = 0;
				for (Scanner sc = new Scanner(f); sc.hasNext();) {
					++n;
					String line = sc.nextLine();
					if (Rand.nextInt(n) == 0)
						frase = line;

				}

				return frase;

			}

		});
		btnNovaFrase.setBounds(21, 166, 123, 27);
		frame.getContentPane().add(btnNovaFrase);
		frame.getRootPane().setDefaultButton(btnNovaFrase);
		btnNovaFrase.requestFocus();

		btnSair = new JButton("Sair");
		btnSair.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {

				int retorno = JOptionPane
						.showConfirmDialog(null, "Deseja realmente sair?",
								"Confirmação de saída",
								JOptionPane.YES_NO_OPTION,
								JOptionPane.QUESTION_MESSAGE);

				if (retorno == JOptionPane.YES_OPTION) {
					System.exit(0);
				}
			}
		});
		btnSair.setBounds(390, 166, 123, 27);
		frame.getContentPane().add(btnSair);
	}

}
